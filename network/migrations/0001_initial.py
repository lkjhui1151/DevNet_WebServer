# Generated by Django 3.2.2 on 2021-05-24 03:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='acl_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('std_exten', models.BooleanField(default=False)),
                ('interface_in', models.BooleanField(default=False)),
                ('interface_out', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='group_acl_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='group_dhcp_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='group_interface_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='group_intertrunk_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='group_portchannel_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='group_routing_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='group_switchport_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='group_vlan_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='interface_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('interface', models.CharField(max_length=50, null=True)),
                ('interface_number', models.CharField(max_length=50, null=True)),
                ('description', models.CharField(max_length=50, null=True)),
                ('ip_netmask', models.CharField(max_length=50, null=True)),
                ('status', models.BooleanField(default=False)),
                ('group_interface', models.ForeignKey(blank=True, null=True,
                                                      on_delete=django.db.models.deletion.CASCADE, to='network.group_interface_table')),
            ],
        ),
        migrations.CreateModel(
            name='interface_type_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('interface_type', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='iot_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('mac', models.CharField(max_length=50, null=True)),
                ('topic', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='nat_pool_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('address', models.CharField(max_length=100, null=True)),
                ('netmask', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='network_type_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('network_type', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='protocal_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='room_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('room', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='switchport_mode_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='username_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50, null=True)),
                ('password', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='vlan_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('vlan_number', models.CharField(max_length=50, null=True)),
                ('name', models.CharField(max_length=50, null=True)),
                ('group_vlan', models.ForeignKey(
                    null=True, on_delete=django.db.models.deletion.CASCADE, to='network.group_vlan_table')),
            ],
        ),
        migrations.CreateModel(
            name='tudo_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('command', models.CharField(max_length=50, null=True)),
                ('start', models.DateTimeField(auto_now_add=True)),
                ('end', models.DateTimeField(auto_now=True, null=True)),
                ('iot', models.ForeignKey(blank=True, null=True,
                                          on_delete=django.db.models.deletion.CASCADE, to='network.iot_table')),
            ],
        ),
        migrations.CreateModel(
            name='switchport_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('group_interface', models.ForeignKey(blank=True, null=True,
                                                      on_delete=django.db.models.deletion.CASCADE, to='network.group_interface_table')),
                ('group_switchport', models.ForeignKey(blank=True, null=True,
                                                       on_delete=django.db.models.deletion.CASCADE, to='network.group_switchport_table')),
                ('group_vlan', models.ForeignKey(blank=True, null=True,
                                                 on_delete=django.db.models.deletion.CASCADE, to='network.group_vlan_table')),
                ('switchport_mode', models.ForeignKey(blank=True, null=True,
                                                      on_delete=django.db.models.deletion.CASCADE, to='network.switchport_mode_table')),
                ('vlan', models.ForeignKey(blank=True, null=True,
                                           on_delete=django.db.models.deletion.CASCADE, to='network.vlan_table')),
            ],
        ),
        migrations.CreateModel(
            name='static_route_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('network_netmask_route', models.CharField(
                    max_length=100, null=True)),
                ('group_routing', models.ForeignKey(blank=True, null=True,
                                                    on_delete=django.db.models.deletion.CASCADE, to='network.group_routing_table')),
            ],
        ),
        migrations.CreateModel(
            name='profile_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('domain_lookup', models.BooleanField(default=False)),
                ('service_pwd', models.BooleanField(default=False)),
                ('domain_name', models.CharField(max_length=50, null=True)),
                ('default_gateway', models.CharField(
                    max_length=50, blank=True, null=True)),
                ('ssh', models.BooleanField(default=False)),
                ('key', models.CharField(max_length=50, null=True)),
                ('neighbor', models.BooleanField(default=False)),
                ('console', models.BooleanField(default=False)),
                ('vty', models.BooleanField(default=False)),
                ('group_acl', models.ForeignKey(blank=True, null=True,
                                                on_delete=django.db.models.deletion.CASCADE, to='network.group_acl_table')),
                ('group_dhcp', models.ForeignKey(blank=True, null=True,
                                                 on_delete=django.db.models.deletion.CASCADE, to='network.group_dhcp_table')),
                ('group_intertrunk', models.ForeignKey(blank=True, null=True,
                                                       on_delete=django.db.models.deletion.CASCADE, to='network.group_intertrunk_table')),
                ('group_portchannel', models.ForeignKey(blank=True, null=True,
                                                        on_delete=django.db.models.deletion.CASCADE, to='network.group_portchannel_table')),
                ('group_routing', models.ForeignKey(blank=True, null=True,
                                                    on_delete=django.db.models.deletion.CASCADE, to='network.group_routing_table')),
                ('group_switchport', models.ForeignKey(blank=True, null=True,
                                                       on_delete=django.db.models.deletion.CASCADE, to='network.group_switchport_table')),
                ('group_vlan', models.ForeignKey(blank=True, null=True,
                                                 on_delete=django.db.models.deletion.CASCADE, to='network.group_vlan_table')),
                ('username', models.ForeignKey(blank=True, null=True,
                                               on_delete=django.db.models.deletion.CASCADE, to='network.username_table')),
            ],
        ),
        migrations.CreateModel(
            name='portchannel_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('portchannel_number', models.CharField(max_length=50)),
                ('group_interface', models.ForeignKey(blank=True, null=True,
                                                      on_delete=django.db.models.deletion.CASCADE, to='network.group_interface_table')),
                ('group_portchannel', models.ForeignKey(blank=True, null=True,
                                                        on_delete=django.db.models.deletion.CASCADE, to='network.group_portchannel_table')),
                ('group_vlan', models.ForeignKey(blank=True, null=True,
                                                 on_delete=django.db.models.deletion.CASCADE, to='network.group_vlan_table')),
                ('switchport_mode', models.ForeignKey(blank=True, null=True,
                                                      on_delete=django.db.models.deletion.CASCADE, to='network.switchport_mode_table')),
                ('vlan', models.ForeignKey(blank=True, null=True,
                                           on_delete=django.db.models.deletion.CASCADE, to='network.vlan_table')),
            ],
        ),
        migrations.CreateModel(
            name='network_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=50, null=True)),
                ('pid', models.CharField(max_length=50, null=True)),
                ('sn', models.CharField(max_length=50, null=True)),
                ('interface_type', models.ForeignKey(blank=True, null=True,
                                                     on_delete=django.db.models.deletion.CASCADE, to='network.interface_type_table')),
                ('network_type', models.ForeignKey(blank=True, null=True,
                                                   on_delete=django.db.models.deletion.CASCADE, to='network.network_type_table')),
            ],
        ),
        migrations.CreateModel(
            name='nat_pat_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('overload', models.BooleanField(default=False)),
                ('interface_in', models.BooleanField(default=False)),
                ('interface_out', models.BooleanField(default=False)),
                ('acl', models.ForeignKey(blank=True, null=True,
                                          on_delete=django.db.models.deletion.CASCADE, to='network.acl_table')),
                ('interface', models.ForeignKey(blank=True, null=True,
                                                on_delete=django.db.models.deletion.CASCADE, to='network.interface_table')),
                ('nat_pool', models.ForeignKey(blank=True, null=True,
                                               on_delete=django.db.models.deletion.CASCADE, to='network.nat_pool_table')),
            ],
        ),
        migrations.AddField(
            model_name='iot_table',
            name='network',
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='network.network_table'),
        ),
        migrations.AddField(
            model_name='iot_table',
            name='profile',
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='network.profile_table'),
        ),
        migrations.AddField(
            model_name='iot_table',
            name='room',
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='network.room_table'),
        ),
        migrations.CreateModel(
            name='intertrunk_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_interface', models.CharField(max_length=50, null=True)),
                ('address', models.CharField(max_length=50, null=True)),
                ('group_intertrunk', models.ForeignKey(blank=True, null=True,
                                                       on_delete=django.db.models.deletion.CASCADE, to='network.group_intertrunk_table')),
                ('interface', models.ForeignKey(blank=True, null=True,
                                                on_delete=django.db.models.deletion.CASCADE, to='network.interface_table')),
                ('vlan', models.ForeignKey(blank=True, null=True,
                                           on_delete=django.db.models.deletion.CASCADE, to='network.vlan_table')),
            ],
        ),
        migrations.AddField(
            model_name='interface_table',
            name='network',
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='network.network_table'),
        ),
        migrations.CreateModel(
            name='hsrp_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('standby_number', models.CharField(max_length=50, null=True)),
                ('vip', models.CharField(max_length=50, null=True)),
                ('priority', models.CharField(max_length=50, null=True)),
                ('interface', models.ForeignKey(blank=True, null=True,
                                                on_delete=django.db.models.deletion.CASCADE, to='network.interface_table')),
            ],
        ),
        migrations.CreateModel(
            name='eigrp_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('as_number', models.CharField(max_length=100, null=True)),
                ('group_routing', models.ForeignKey(blank=True, null=True,
                                                    on_delete=django.db.models.deletion.CASCADE, to='network.group_routing_table')),
            ],
        ),
        migrations.CreateModel(
            name='eigrp_network_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('network', models.CharField(max_length=100, null=True)),
                ('eigrp', models.ForeignKey(blank=True, null=True,
                                            on_delete=django.db.models.deletion.CASCADE, to='network.eigrp_table')),
                ('passive', models.ForeignKey(blank=True, null=True,
                                              on_delete=django.db.models.deletion.CASCADE, to='network.group_interface_table')),
            ],
        ),
        migrations.CreateModel(
            name='dhcp_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('excluded', models.CharField(max_length=50, null=True)),
                ('dhcp_pool', models.CharField(max_length=50, null=True)),
                ('helper_address', models.CharField(max_length=50, null=True)),
                ('network', models.CharField(max_length=50, null=True)),
                ('default_router', models.CharField(max_length=50, null=True)),
                ('dns_server', models.CharField(max_length=50, null=True)),
                ('domain_name', models.CharField(max_length=50, null=True)),
                ('group_dhcp', models.ForeignKey(blank=True, null=True,
                                                 on_delete=django.db.models.deletion.CASCADE, to='network.group_dhcp_table')),
                ('interface_helper', models.ForeignKey(blank=True, null=True,
                                                       on_delete=django.db.models.deletion.CASCADE, to='network.interface_table')),
            ],
        ),
        migrations.AddField(
            model_name='acl_table',
            name='group_acl',
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='network.group_acl_table'),
        ),
        migrations.AddField(
            model_name='acl_table',
            name='interface',
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='network.interface_table'),
        ),
        migrations.CreateModel(
            name='acl_policy_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),
                ('specify', models.BooleanField(default=False)),
                ('any', models.BooleanField(default=False)),
                ('src_address', models.CharField(max_length=50, null=True)),
                ('des_any', models.BooleanField(default=False)),
                ('host', models.BooleanField(default=False)),
                ('src_port', models.CharField(max_length=50, null=True)),
                ('des_address', models.CharField(max_length=50, null=True)),
                ('range_port', models.BooleanField(default=False)),
                ('des_port', models.CharField(max_length=50, null=True)),
                ('acl', models.ForeignKey(blank=True, null=True,
                                          on_delete=django.db.models.deletion.CASCADE, to='network.acl_table')),
                ('protocal', models.ForeignKey(blank=True, null=True,
                                               on_delete=django.db.models.deletion.CASCADE, to='network.protocal_table')),
            ],
        ),
    ]
